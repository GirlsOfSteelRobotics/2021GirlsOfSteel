// RobotBuilder Version: 3.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import com.revrobotics.CANSparkMaxLowLevel;
import com.revrobotics.SimableCANSparkMax;
import edu.wpi.first.wpilibj.drive.MecanumDrive;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Chassis extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SimableCANSparkMax m_rightFront;
    private final SimableCANSparkMax m_rightBack;
    private final SimableCANSparkMax m_leftFront;
    private final SimableCANSparkMax m_leftBack;
    private final MecanumDrive m_mecanumDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    /**
     *
     */
    public Chassis() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        m_rightFront = new SimableCANSparkMax(1, CANSparkMaxLowLevel.MotorType.kBrushless);
        m_rightFront.setInverted(false);

        m_rightBack = new SimableCANSparkMax(2, CANSparkMaxLowLevel.MotorType.kBrushless);
        m_rightBack.setInverted(false);

        m_leftFront = new SimableCANSparkMax(3, CANSparkMaxLowLevel.MotorType.kBrushless);
        m_leftFront.setInverted(false);

        m_leftBack = new SimableCANSparkMax(4, CANSparkMaxLowLevel.MotorType.kBrushless);
        m_leftBack.setInverted(false);

        m_mecanumDrive = new MecanumDrive(m_leftFront, m_leftBack,
                m_rightFront, m_rightBack);
        addChild("Mecanum Drive", m_mecanumDrive);
        m_mecanumDrive.setSafetyEnabled(true);
        m_mecanumDrive.setExpiration(0.1);
        m_mecanumDrive.setMaxOutput(1.0);


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    public void driveByJoystick(double joystickSpeed, double joystickSteer) {
        m_mecanumDrive.driveCartesian(joystickSpeed, 0, joystickSteer);
    }

}

